// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TagListTemplate render matches the expected snapshot 1`] = `
<Layout
  pageStyle="offWhite"
>
  <SEO
    title="All Tags"
  />
  <Styled(Component)
    blacklist={
      Array [
        "css",
        "maxWidth",
        "m",
        "mt",
        "mr",
        "mb",
        "ml",
        "mx",
        "my",
        "p",
        "pt",
        "pr",
        "pb",
        "pl",
        "px",
        "py",
      ]
    }
    is="main"
    m="0 auto"
    maxWidth="1024px"
    px={
      Array [
        3,
        4,
      ]
    }
  >
    <Styled(Component)
      blacklist={
        Array [
          "css",
          "m",
          "mt",
          "mr",
          "mb",
          "ml",
          "mx",
          "my",
          "p",
          "pt",
          "pr",
          "pb",
          "pl",
          "px",
          "py",
          "cursor",
        ]
      }
      border="1px solid"
      borderColor="grayLight"
      borderRadius={4}
      is={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "Body": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-iwsKbI",
              "isStatic": false,
              "rules": Array [
                [Function],
                "max-height: 415px; overflow: scroll;",
              ],
            },
            "defaultProps": Object {
              "blacklist": Array [
                "css",
              ],
              "is": "div",
            },
            "displayName": "Styled(Component)",
            "foldedComponentIds": Array [],
            "propTypes": Object {},
            "render": [Function],
            "styledComponentId": "sc-iwsKbI",
            "systemComponent": true,
            "target": Object {
              "$$typeof": Symbol(react.forward_ref),
              "render": [Function],
            },
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
          "Footer": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-gZMcBi",
              "isStatic": false,
              "rules": Array [
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
              ],
            },
            "defaultProps": Object {
              "alignItems": "center",
              "blacklist": Array [
                "css",
                "alignItems",
                "border",
                "borderTop",
                "borderRight",
                "borderBottom",
                "borderLeft",
                "borderColor",
                "display",
                "justifyContent",
                "m",
                "mt",
                "mr",
                "mb",
                "ml",
                "mx",
                "my",
                "p",
                "pt",
                "pr",
                "pb",
                "pl",
                "px",
                "py",
              ],
              "borderColor": "grayLight",
              "borderTop": 1,
              "display": "flex",
              "is": "footer",
              "justifyContent": "space-between",
              "mt": 4,
              "mx": -3,
              "pt": 3,
              "px": 3,
            },
            "displayName": "Panel.Footer",
            "foldedComponentIds": Array [],
            "propTypes": Object {
              "alignItems": [Function],
              "border": [Function],
              "borderBottom": [Function],
              "borderColor": [Function],
              "borderLeft": [Function],
              "borderRight": [Function],
              "borderTop": [Function],
              "display": [Function],
              "justifyContent": [Function],
              "m": [Function],
              "mb": [Function],
              "ml": [Function],
              "mr": [Function],
              "mt": [Function],
              "mx": [Function],
              "my": [Function],
              "p": [Function],
              "pb": [Function],
              "pl": [Function],
              "pr": [Function],
              "pt": [Function],
              "px": [Function],
              "py": [Function],
            },
            "render": [Function],
            "styledComponentId": "sc-gZMcBi",
            "systemComponent": true,
            "target": Object {
              "$$typeof": Symbol(react.forward_ref),
              "render": [Function],
            },
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
          "Header": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-htoDjs",
              "isStatic": false,
              "rules": Array [
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
              ],
            },
            "defaultProps": Object {
              "alignItems": "center",
              "blacklist": Array [
                "css",
                "alignItems",
                "border",
                "borderTop",
                "borderRight",
                "borderBottom",
                "borderLeft",
                "borderColor",
                "display",
                "justifyContent",
                "m",
                "mt",
                "mr",
                "mb",
                "ml",
                "mx",
                "my",
                "p",
                "pt",
                "pr",
                "pb",
                "pl",
                "px",
                "py",
                "flex",
                "flexDirection",
              ],
              "borderBottom": 1,
              "borderColor": "grayLight",
              "display": "flex",
              "is": "header",
              "justifyContent": "space-between",
              "mb": 4,
              "mx": -3,
              "pb": 3,
              "px": 3,
            },
            "displayName": "Panel.Header",
            "foldedComponentIds": Array [],
            "propTypes": Object {
              "alignItems": [Function],
              "border": [Function],
              "borderBottom": [Function],
              "borderColor": [Function],
              "borderLeft": [Function],
              "borderRight": [Function],
              "borderTop": [Function],
              "display": [Function],
              "flex": [Function],
              "flexDirection": [Function],
              "justifyContent": [Function],
              "m": [Function],
              "mb": [Function],
              "ml": [Function],
              "mr": [Function],
              "mt": [Function],
              "mx": [Function],
              "my": [Function],
              "p": [Function],
              "pb": [Function],
              "pl": [Function],
              "pr": [Function],
              "pt": [Function],
              "px": [Function],
              "py": [Function],
            },
            "render": [Function],
            "styledComponentId": "sc-htoDjs",
            "systemComponent": true,
            "target": Object {
              "$$typeof": Symbol(react.forward_ref),
              "render": [Function],
            },
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
          "Title": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-dnqmqq",
              "isStatic": false,
              "rules": Array [
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
              ],
            },
            "defaultProps": Object {
              "blacklist": Array [
                "css",
                "color",
                "bg",
                "fontSize",
                "m",
                "mt",
                "mr",
                "mb",
                "ml",
                "mx",
                "my",
                "p",
                "pt",
                "pr",
                "pb",
                "pl",
                "px",
                "py",
                "alignItems",
                "display",
              ],
              "color": "offBlack",
              "fontSize": 4,
              "is": "h4",
              "m": 0,
            },
            "displayName": "Styled(Component)",
            "foldedComponentIds": Array [],
            "propTypes": Object {
              "alignItems": [Function],
              "bg": [Function],
              "color": [Function],
              "display": [Function],
              "fontSize": [Function],
              "m": [Function],
              "mb": [Function],
              "ml": [Function],
              "mr": [Function],
              "mt": [Function],
              "mx": [Function],
              "my": [Function],
              "p": [Function],
              "pb": [Function],
              "pl": [Function],
              "pr": [Function],
              "pt": [Function],
              "px": [Function],
              "py": [Function],
            },
            "render": [Function],
            "styledComponentId": "sc-dnqmqq",
            "systemComponent": true,
            "target": Object {
              "$$typeof": Symbol(react.forward_ref),
              "render": [Function],
            },
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-gzVnrw",
            "isStatic": false,
            "rules": Array [
              [Function],
              [Function],
              [Function],
              [Function],
              [Function],
              [Function],
              "box-shadow: #dfdfdf 0 3px 10px;",
              [Function],
              [Function],
              [Function],
              [Function],
              [Function],
              [Function],
              [Function],
              [Function],
            ],
          },
          "defaultProps": Object {
            "blacklist": Array [
              "cursor",
            ],
            "border": "1px solid",
            "borderColor": "grayLight",
            "borderRadius": 4,
            "m": 0,
            "p": 3,
            "width": "100%",
          },
          "displayName": "Panel",
          "foldedComponentIds": Array [],
          "propTypes": Object {
            "alignItems": [Function],
            "border": [Function],
            "borderBottom": [Function],
            "borderColor": [Function],
            "borderLeft": [Function],
            "borderRadius": [Function],
            "borderRight": [Function],
            "borderTop": [Function],
            "display": [Function],
            "flex": [Function],
            "flexDirection": [Function],
            "height": [Function],
            "justifyContent": [Function],
            "m": [Function],
            "mb": [Function],
            "ml": [Function],
            "mr": [Function],
            "mt": [Function],
            "mx": [Function],
            "my": [Function],
            "p": [Function],
            "pb": [Function],
            "pl": [Function],
            "position": [Function],
            "pr": [Function],
            "pt": [Function],
            "px": [Function],
            "py": [Function],
            "width": [Function],
          },
          "render": [Function],
          "styledComponentId": "sc-gzVnrw",
          "systemComponent": true,
          "target": Object {
            "$$typeof": Symbol(react.forward_ref),
            "render": [Function],
          },
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      m={0}
      my={4}
      p={3}
      px={4}
      py={4}
      width="100%"
    >
      <h2>
        Tags
      </h2>
      <ul>
        <li
          key="Test"
        >
          <ForwardRef
            to="/blog/tag/test/"
          >
            Test
             (
            15
            )
          </ForwardRef>
        </li>
        <li
          key="Press Release"
        >
          <ForwardRef
            to="/blog/tag/press-release/"
          >
            Press Release
             (
            6
            )
          </ForwardRef>
        </li>
        <li
          key="Enterprise Loyalty"
        >
          <ForwardRef
            to="/blog/tag/enterprise-loyalty/"
          >
            Enterprise Loyalty
             (
            9
            )
          </ForwardRef>
        </li>
      </ul>
    </Styled(Component)>
  </Styled(Component)>
</Layout>
`;
