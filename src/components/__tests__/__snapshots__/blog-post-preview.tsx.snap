// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`BlogPostPreview render matches the expected snapshot 1`] = `
<Styled(Component)
  blacklist={
    Array [
      "css",
      "m",
      "mt",
      "mr",
      "mb",
      "ml",
      "mx",
      "my",
      "p",
      "pt",
      "pr",
      "pb",
      "pl",
      "px",
      "py",
      "cursor",
    ]
  }
  border="1px solid"
  borderColor="grayLight"
  borderRadius={4}
  is={
    Object {
      "$$typeof": Symbol(react.forward_ref),
      "Body": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-ifAKCX",
          "isStatic": false,
          "rules": Array [
            [Function],
            "max-height: 415px; overflow: scroll;",
          ],
        },
        "defaultProps": Object {
          "blacklist": Array [
            "css",
          ],
          "is": "div",
        },
        "displayName": "Styled(Component)",
        "foldedComponentIds": Array [],
        "propTypes": Object {},
        "render": [Function],
        "styledComponentId": "sc-ifAKCX",
        "systemComponent": true,
        "target": Object {
          "$$typeof": Symbol(react.forward_ref),
          "render": [Function],
        },
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      },
      "Footer": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-EHOje",
          "isStatic": false,
          "rules": Array [
            [Function],
            [Function],
            [Function],
            [Function],
            [Function],
            [Function],
            [Function],
          ],
        },
        "defaultProps": Object {
          "alignItems": "center",
          "blacklist": Array [
            "css",
            "alignItems",
            "border",
            "borderTop",
            "borderRight",
            "borderBottom",
            "borderLeft",
            "borderColor",
            "display",
            "justifyContent",
            "m",
            "mt",
            "mr",
            "mb",
            "ml",
            "mx",
            "my",
            "p",
            "pt",
            "pr",
            "pb",
            "pl",
            "px",
            "py",
          ],
          "borderColor": "grayLight",
          "borderTop": 1,
          "display": "flex",
          "is": "footer",
          "justifyContent": "space-between",
          "mt": 4,
          "mx": -3,
          "pt": 3,
          "px": 3,
        },
        "displayName": "Panel.Footer",
        "foldedComponentIds": Array [],
        "propTypes": Object {
          "alignItems": [Function],
          "border": [Function],
          "borderBottom": [Function],
          "borderColor": [Function],
          "borderLeft": [Function],
          "borderRight": [Function],
          "borderTop": [Function],
          "display": [Function],
          "justifyContent": [Function],
          "m": [Function],
          "mb": [Function],
          "ml": [Function],
          "mr": [Function],
          "mt": [Function],
          "mx": [Function],
          "my": [Function],
          "p": [Function],
          "pb": [Function],
          "pl": [Function],
          "pr": [Function],
          "pt": [Function],
          "px": [Function],
          "py": [Function],
        },
        "render": [Function],
        "styledComponentId": "sc-EHOje",
        "systemComponent": true,
        "target": Object {
          "$$typeof": Symbol(react.forward_ref),
          "render": [Function],
        },
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      },
      "Header": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-htpNat",
          "isStatic": false,
          "rules": Array [
            [Function],
            [Function],
            [Function],
            [Function],
            [Function],
            [Function],
            [Function],
            [Function],
            [Function],
          ],
        },
        "defaultProps": Object {
          "alignItems": "center",
          "blacklist": Array [
            "css",
            "alignItems",
            "border",
            "borderTop",
            "borderRight",
            "borderBottom",
            "borderLeft",
            "borderColor",
            "display",
            "justifyContent",
            "m",
            "mt",
            "mr",
            "mb",
            "ml",
            "mx",
            "my",
            "p",
            "pt",
            "pr",
            "pb",
            "pl",
            "px",
            "py",
            "flex",
            "flexDirection",
          ],
          "borderBottom": 1,
          "borderColor": "grayLight",
          "display": "flex",
          "is": "header",
          "justifyContent": "space-between",
          "mb": 4,
          "mx": -3,
          "pb": 3,
          "px": 3,
        },
        "displayName": "Panel.Header",
        "foldedComponentIds": Array [],
        "propTypes": Object {
          "alignItems": [Function],
          "border": [Function],
          "borderBottom": [Function],
          "borderColor": [Function],
          "borderLeft": [Function],
          "borderRight": [Function],
          "borderTop": [Function],
          "display": [Function],
          "flex": [Function],
          "flexDirection": [Function],
          "justifyContent": [Function],
          "m": [Function],
          "mb": [Function],
          "ml": [Function],
          "mr": [Function],
          "mt": [Function],
          "mx": [Function],
          "my": [Function],
          "p": [Function],
          "pb": [Function],
          "pl": [Function],
          "pr": [Function],
          "pt": [Function],
          "px": [Function],
          "py": [Function],
        },
        "render": [Function],
        "styledComponentId": "sc-htpNat",
        "systemComponent": true,
        "target": Object {
          "$$typeof": Symbol(react.forward_ref),
          "render": [Function],
        },
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      },
      "Title": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-bxivhb",
          "isStatic": false,
          "rules": Array [
            [Function],
            [Function],
            [Function],
            [Function],
            [Function],
            [Function],
          ],
        },
        "defaultProps": Object {
          "blacklist": Array [
            "css",
            "color",
            "bg",
            "fontSize",
            "m",
            "mt",
            "mr",
            "mb",
            "ml",
            "mx",
            "my",
            "p",
            "pt",
            "pr",
            "pb",
            "pl",
            "px",
            "py",
            "alignItems",
            "display",
          ],
          "color": "offBlack",
          "fontSize": 4,
          "is": "h4",
          "m": 0,
        },
        "displayName": "Styled(Component)",
        "foldedComponentIds": Array [],
        "propTypes": Object {
          "alignItems": [Function],
          "bg": [Function],
          "color": [Function],
          "display": [Function],
          "fontSize": [Function],
          "m": [Function],
          "mb": [Function],
          "ml": [Function],
          "mr": [Function],
          "mt": [Function],
          "mx": [Function],
          "my": [Function],
          "p": [Function],
          "pb": [Function],
          "pl": [Function],
          "pr": [Function],
          "pt": [Function],
          "px": [Function],
          "py": [Function],
        },
        "render": [Function],
        "styledComponentId": "sc-bxivhb",
        "systemComponent": true,
        "target": Object {
          "$$typeof": Symbol(react.forward_ref),
          "render": [Function],
        },
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      },
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-bwzfXH",
        "isStatic": false,
        "rules": Array [
          [Function],
          [Function],
          [Function],
          [Function],
          [Function],
          [Function],
          "box-shadow: #dfdfdf 0 3px 10px;",
          [Function],
          [Function],
          [Function],
          [Function],
          [Function],
          [Function],
          [Function],
          [Function],
        ],
      },
      "defaultProps": Object {
        "blacklist": Array [
          "cursor",
        ],
        "border": "1px solid",
        "borderColor": "grayLight",
        "borderRadius": 4,
        "m": 0,
        "p": 3,
        "width": "100%",
      },
      "displayName": "Panel",
      "foldedComponentIds": Array [],
      "propTypes": Object {
        "alignItems": [Function],
        "border": [Function],
        "borderBottom": [Function],
        "borderColor": [Function],
        "borderLeft": [Function],
        "borderRadius": [Function],
        "borderRight": [Function],
        "borderTop": [Function],
        "display": [Function],
        "flex": [Function],
        "flexDirection": [Function],
        "height": [Function],
        "justifyContent": [Function],
        "m": [Function],
        "mb": [Function],
        "ml": [Function],
        "mr": [Function],
        "mt": [Function],
        "mx": [Function],
        "my": [Function],
        "p": [Function],
        "pb": [Function],
        "pl": [Function],
        "position": [Function],
        "pr": [Function],
        "pt": [Function],
        "px": [Function],
        "py": [Function],
        "width": [Function],
      },
      "render": [Function],
      "styledComponentId": "sc-bwzfXH",
      "systemComponent": true,
      "target": Object {
        "$$typeof": Symbol(react.forward_ref),
        "render": [Function],
      },
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    }
  }
  key="/2019-02-25-test-post/"
  m={0}
  mb={4}
  p={3}
  px={4}
  py={5}
  width="100%"
>
  <ForwardRef
    style={
      Object {
        "color": "#666666",
        "display": "block",
        "textDecoration": "none",
      }
    }
    to="/blog/2019-02-25-test-post/"
  >
    Test Post
  </ForwardRef>
  <Styled(Component)
    blacklist={
      Array [
        "css",
        "color",
        "bg",
        "fontSize",
      ]
    }
    color="grayDark"
    fontSize={1}
    is="div"
  >
    <span>
      Post Written by 
      John Doe
       on 
      February 25, 2019
    </span>
    <br />
    <span>
      Tags: 
      <Styled(Component)
        blacklist={
          Array [
            "css",
            "m",
            "mt",
            "mr",
            "mb",
            "ml",
            "mx",
            "my",
            "p",
            "pt",
            "pr",
            "pb",
            "pl",
            "px",
            "py",
          ]
        }
        is="span"
        key="tagLink-Test"
        mx={1}
      >
        <ForwardRef
          to="/blog/tags/test"
        >
          Test
        </ForwardRef>
      </Styled(Component)>
      <Styled(Component)
        blacklist={
          Array [
            "css",
            "m",
            "mt",
            "mr",
            "mb",
            "ml",
            "mx",
            "my",
            "p",
            "pt",
            "pr",
            "pb",
            "pl",
            "px",
            "py",
          ]
        }
        is="span"
        key="tagLink-Press Release"
        mx={1}
      >
        <ForwardRef
          to="/blog/tags/press-release"
        >
          Press Release
        </ForwardRef>
      </Styled(Component)>
    </span>
  </Styled(Component)>
  <Text
    blacklist={
      Array [
        "css",
        "fontSize",
        "lineHeight",
        "m",
        "mt",
        "mr",
        "mb",
        "ml",
        "mx",
        "my",
        "p",
        "pt",
        "pr",
        "pb",
        "pl",
        "px",
        "py",
        "textStyle",
        "alignItems",
        "color",
        "bg",
        "display",
        "flex",
        "fontWeight",
        "textAlign",
      ]
    }
    color="grayDark"
    dangerouslySetInnerHTML={
      Object {
        "__html": "This is the excerpt for a test post.",
      }
    }
    fontSize={3}
    is="p"
    lineHeight="1.5"
    m={0}
    textStyle="normal"
  />
  <ForwardRef
    color="grayDark"
    to="/blog/2019-02-25-test-post/"
  >
    Read More
  </ForwardRef>
</Styled(Component)>
`;
